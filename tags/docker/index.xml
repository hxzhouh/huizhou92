<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Docker on huizhou92&#39;s Blog</title>
        <link>https://huizhou92.com/tags/docker/</link>
        <description>Recent content in Docker on huizhou92&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Copyright © 2023 huizhou92</copyright>
        <lastBuildDate>Wed, 22 Jan 2025 18:35:19 +0800</lastBuildDate><atom:link href="https://huizhou92.com/tags/docker/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>How Kubernetes Ensures Graceful Pod Shutdown</title>
        <link>https://huizhou92.com/p/how-kubernetes-ensures-graceful-pod-shutdown/</link>
        <pubDate>Wed, 22 Jan 2025 18:35:19 +0800</pubDate>
        
        <guid>https://huizhou92.com/p/how-kubernetes-ensures-graceful-pod-shutdown/</guid>
        <description>&lt;img src="https://images.hxzhouh.com/blog-images/2025/01/1571f60da6bf2c1cb8e5a5d97cbd8411.png" alt="Featured image of post How Kubernetes Ensures Graceful Pod Shutdown" /&gt;&lt;p&gt;Gracefully stopping a Pod in Kubernetes is not just a technical process but a crucial aspect of maintaining application stability, ensuring data consistency, and minimizing service disruptions. The process involves several mechanisms and configurations to ensure that Pods can terminate without abruptly cutting off services or losing critical data. Below is a detailed breakdown of how Kubernetes achieves this, underscoring this topic&amp;rsquo;s importance in system reliability.&lt;/p&gt;
&lt;h2 id=&#34;what-doesgraceful-shutdown-mean&#34;&gt;&lt;strong&gt;What Does&amp;quot;Graceful Shutdown&amp;quot; Mean?&lt;/strong&gt;
&lt;/h2&gt;&lt;!-- more--&gt;
&lt;p&gt;A graceful shutdown refers to the controlled termination of a Pod, allowing it to complete ongoing tasks, clean up resources, and notify other system components before being removed. This contrasts with a “hard shutdown,” where the Pod is forcefully terminated without any cleanup.&lt;/p&gt;
&lt;p&gt;In distributed systems, graceful shutdown minimizes disruptions by:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Informing load balancers or service registries to stop routing traffic to the Pod.&lt;/li&gt;
&lt;li&gt;Allowing applications within the Pod to close connections, save state, or perform other cleanup tasks.&lt;/li&gt;
&lt;li&gt;Avoiding abrupt termination that could lead to errors like dropped requests or inconsistent data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;key-components-of-graceful-shutdown-in-kubernetes&#34;&gt;&lt;strong&gt;Key Components of Graceful Shutdown in Kubernetes&lt;/strong&gt;
&lt;/h2&gt;&lt;h3 id=&#34;1-prestop-hook&#34;&gt;&lt;strong&gt;1. PreStop Hook&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;PreStop&lt;/code&gt; hook is an essential feature in Kubernetes that allows you to define custom logic for cleanup before the container receives a termination signal (&lt;code&gt;SIGTERM&lt;/code&gt;). It can execute either:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A shell command (&lt;code&gt;exec&lt;/code&gt;) inside the container.&lt;/li&gt;
&lt;li&gt;An HTTP request (&lt;code&gt;httpGet&lt;/code&gt;) to an endpoint exposed by the application.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nt&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;containers&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;  &lt;/span&gt;- &lt;span class=&#34;nt&#34;&gt;name&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;l&#34;&gt;my-container&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;    &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;lifecycle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;      &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;preStop&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;        &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;exec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;w&#34;&gt;          &lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;command&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/bin/sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;-c&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;w&#34;&gt; &lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;/cleanup-script.sh&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;w&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;This script might handle tasks such as deregistering from external service registries or saving application state.&lt;/p&gt;
&lt;h3 id=&#34;2-termination-signals-sigterm-and-sigkill&#34;&gt;&lt;strong&gt;2. Termination Signals (SIGTERM and SIGKILL)&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;When a Pod is deleted (e.g., via &lt;code&gt;kubectl delete pod&lt;/code&gt;), Kubernetes sends a &lt;code&gt;SIGTERM&lt;/code&gt; signal to all containers in the Pod. Applications should listen for this signal and initiate shutdown procedures (e.g., closing database connections or stopping background jobs).&lt;/p&gt;
&lt;p&gt;If the container does not terminate within the specified grace period (&lt;code&gt;terminationGracePeriodSeconds&lt;/code&gt;), Kubernetes escalates by sending a &lt;code&gt;SIGKILL&lt;/code&gt; signal, which forcefully stops the container.&lt;/p&gt;
&lt;h3 id=&#34;3-termination-grace-period&#34;&gt;&lt;strong&gt;3. Termination Grace Period&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;The &lt;code&gt;terminationGracePeriodSeconds&lt;/code&gt; field defines how long Kubernetes waits for a Pod to shut down gracefully after sending &lt;code&gt;SIGTERM&lt;/code&gt;. The default value is 30 seconds, but it can be customized based on your application’s needs.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nx&#34;&gt;spec&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;terminationGracePeriodSeconds&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;60&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;During this time:&lt;/p&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;The application processes its shutdown logic.&lt;/li&gt;
&lt;li&gt;If defined, the &lt;code&gt;PreStop&lt;/code&gt; hook runs first.&lt;/li&gt;
&lt;li&gt;If the grace period expires before completion, Kubernetes sends &lt;code&gt;SIGKILL&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-endpoint-removal-from-services&#34;&gt;&lt;strong&gt;4. Endpoint Removal from Services&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;When a Pod is part of a Service (e.g., ClusterIP or LoadBalancer), Kubernetes removes its IP address from the associated Endpoints list as soon as it enters the “Terminating” state. This ensures that no new traffic is routed to the terminating Pod while it completes its shutdown process.&lt;/p&gt;
&lt;p&gt;However, ongoing requests may still be routed before removal from Endpoints is completed. To mitigate this issue, applications should implement readiness probes and connection-draining mechanisms.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;challenges-with-stateful-applications&#34;&gt;&lt;strong&gt;Challenges With Stateful Applications&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;For stateless applications (e.g., web servers), graceful shutdown mechanisms are usually sufficient as they do not maintain a persistent state across requests. However, stateful distributed systems like databases (e.g., TiDB) require additional steps during shutdown:&lt;/p&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;&lt;strong&gt;Leader Transfer:&lt;/strong&gt; In systems using leader-follower architectures (e.g., Raft-based databases like TiKV), leaders must transfer leadership roles to other nodes before shutting down.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Data Synchronization:&lt;/strong&gt; Ensure all pending writes are flushed and synchronized with replicas.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manual Intervention:&lt;/strong&gt; Manual intervention may be required instead of forcefully killing Pods if automated cleanup fails due to network issues or bugs.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Custom controllers or admission webhooks can enforce stricter validation and control over Pod deletion processes to address these complexities.&lt;/p&gt;
&lt;h2 id=&#34;advanced-techniques-for-ensuring-graceful-shutdown&#34;&gt;&lt;strong&gt;Advanced Techniques for Ensuring Graceful Shutdown&lt;/strong&gt;
&lt;/h2&gt;&lt;h3 id=&#34;1-validatingadmissionwebhook&#34;&gt;&lt;strong&gt;1. ValidatingAdmissionWebhook&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;A &lt;code&gt;ValidatingAdmissionWebhook&lt;/code&gt; can intercept API server requests related to Pod deletion and validate whether all prerequisites for graceful shutdown have been met before allowing deletion.&lt;/p&gt;
&lt;p&gt;Workflow example:&lt;/p&gt;
&lt;ol start=&#34;10&#34;&gt;
&lt;li&gt;User deletes a Pod.&lt;/li&gt;
&lt;li&gt;The API server calls an external webhook server.&lt;/li&gt;
&lt;li&gt;The webhook checks if cleanup tasks (e.g., leader transfer) are complete.&lt;/li&gt;
&lt;li&gt;If not complete, deletion is rejected until conditions are satisfied.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This approach ensures that Pods cannot be deleted prematurely during critical operations like rolling updates or node migrations.&lt;/p&gt;
&lt;h3 id=&#34;2-custom-controllers&#34;&gt;&lt;strong&gt;2. Custom Controllers&lt;/strong&gt;
&lt;/h3&gt;&lt;p&gt;Custom controllers provide fine-grained control over complex workflows involving stateful applications. They explicitly manage their lifecycle through reconciliation loops in the TiDB Operator.&lt;/p&gt;
&lt;p&gt;Steps include:&lt;/p&gt;
&lt;ol start=&#34;14&#34;&gt;
&lt;li&gt;Notify cluster components about node decommissioning.&lt;/li&gt;
&lt;li&gt;Wait for leader transfers and data synchronization.&lt;/li&gt;
&lt;li&gt;Proceed with node termination only when safe conditions are met.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While effective, writing custom controllers requires significant development effort compared to straightforward solutions like admission webhooks.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;why-is-graceful-shutdown-important&#34;&gt;&lt;strong&gt;Why Is Graceful Shutdown Important?&lt;/strong&gt;
&lt;/h2&gt;&lt;ol start=&#34;17&#34;&gt;
&lt;li&gt;&lt;strong&gt;Avoid Service Disruptions:&lt;/strong&gt; Prevents routing traffic to terminated Pods mid-request.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensure Data Consistency:&lt;/strong&gt; Allows time for saving state or completing transactions.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Minimize User Impact:&lt;/strong&gt; Smoothly transitions workloads during rolling updates without noticeable downtime.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimize Resource Usage:&lt;/strong&gt; Releases resources cleanly without leaks or orphaned connections.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;Kubernetes provides robust mechanisms, such as PreStop hooks, termination signals (&lt;code&gt;SIGTERM&lt;/code&gt;, &lt;code&gt;SIGKILL&lt;/code&gt;), grace periods (terminationGracePeriodSeconds), and advanced techniques like admission &lt;code&gt;webhooks&lt;/code&gt;, to ensure that Pods shut down gracefully while maintaining system stability and user experience quality.&lt;/p&gt;
&lt;p&gt;For more complex scenarios involving stateful applications or distributed systems requiring strict guarantees around data safety and availability during shutdowns, combining these native features with custom controllers or admission &lt;code&gt;webhooks&lt;/code&gt; offers an ideal solution tailored to specific operational requirements.&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;Reference
&lt;/h2&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pod Lifecycle&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Termination Process&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://github.com/pingcap/tidb-operator&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TiDB Operator GitHub Repository&lt;/a&gt;&lt;br&gt;
&lt;a class=&#34;link&#34; href=&#34;https://kubernetes.io/docs/reference/access-authn-authz/extensible-admission-controllers/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Kubernetes Dynamic Admission Control&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://huizhou92.com/p/how-kubernetes-ensures-graceful-pod-shutdown/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Long Time Link&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you find my blog helpful, please subscribe to me via &lt;a class=&#34;link&#34; href=&#34;https://huizhou92.com/index.xml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;RSS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Or follow me on &lt;a class=&#34;link&#34; href=&#34;https://x.com/@piaopiaopig&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;X&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If you have a &lt;a class=&#34;link&#34; href=&#34;https://medium.huizhou92.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Medium&lt;/a&gt; account, follow me there. My articles will be published there as soon as possible.&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        
    </channel>
</rss>
