<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Golib on huizhou92&#39;s Blog</title>
        <link>https://huizhou92.com/tags/golib/</link>
        <description>Recent content in Golib on huizhou92&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Copyright © 2023 huizhou92</copyright>
        <lastBuildDate>Sat, 13 Jan 2024 20:50:00 +0000</lastBuildDate><atom:link href="https://huizhou92.com/tags/golib/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Go1.22 add frist v2 lib, math/rand/v2 more fast and more Standard</title>
        <link>https://huizhou92.com/p/go1.22-add-frist-v2-lib-math/rand/v2-more-fast-and-more-standard/</link>
        <pubDate>Sat, 13 Jan 2024 20:50:00 +0000</pubDate>
        
        <guid>https://huizhou92.com/p/go1.22-add-frist-v2-lib-math/rand/v2-more-fast-and-more-standard/</guid>
        <description>&lt;img src="https://images.hxzhouh.com/blog-images/2024/06/891b8023b8e7e301c90a69bfd10bdcb0.png" alt="Featured image of post Go1.22 add frist v2 lib, math/rand/v2 more fast and more Standard" /&gt;&lt;p&gt;The inaugural v2 version of the standard library in Go hails from the esteemed &lt;a class=&#34;link&#34; href=&#34;https://images.hxzhouh.com/blog-images/2024/06/17edb26c313e3d09e62e17d988045a6f.&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;math/rand/v2&lt;/a&gt; repository. It is set to make its grand debut with the official release of Go1.22, poised to serve as a reliable and production-ready resource.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This article is first published in the medium MPP plan. If you are a medium user, please follow me in &lt;a class=&#34;link&#34; href=&#34;https://medium.huizhou92.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt;. Thank you very much.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;reasons&#34;&gt;Reasons
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;The original &lt;code&gt;math/rand&lt;/code&gt; library in the standard package had numerous deficiencies and areas for improvement. These included outdated generators, slow algorithms (performance), and unfortunate conflicts with &lt;code&gt;crypto/rand.Read&lt;/code&gt;, among other issues.&lt;/li&gt;
&lt;li&gt;There is a plan in place to upgrade the v2 versions of standard libraries. Starting with &lt;code&gt;math&lt;/code&gt; allows for the accumulation of experience and resolving tooling ecosystem challenges (such as support from tools like gopls and goimports for v2 packages). Subsequent iterations can then address higher-risk packages, like &lt;code&gt;sync/v2&lt;/code&gt; or &lt;code&gt;encoding/json/v2&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Go1 requires compatibility guarantees, making it impractical to directly modify the original library. The issues with &lt;code&gt;math/rand&lt;/code&gt; are also more prominent and evident.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;change-list&#34;&gt;change list
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Removed &lt;code&gt;Rand.Read&lt;/code&gt; and the top-level &lt;code&gt;Read&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;Removed &lt;code&gt;Source.Seed&lt;/code&gt;, &lt;code&gt;Rand.Seed&lt;/code&gt;, and the top-level &lt;code&gt;Seed&lt;/code&gt; function (meaning that top-level functions like &lt;code&gt;Int&lt;/code&gt; will always use random seeding).&lt;/li&gt;
&lt;li&gt;Removed &lt;code&gt;Source64&lt;/code&gt;, as &lt;code&gt;Source&lt;/code&gt; now provides the &lt;code&gt;Uint64&lt;/code&gt; method, making the original methods unnecessary.&lt;/li&gt;
&lt;li&gt;Utilized a more direct implementation for &lt;code&gt;Float32&lt;/code&gt; and &lt;code&gt;Float64&lt;/code&gt;. For example, in the case of &lt;code&gt;Float64&lt;/code&gt;, the original implementation used &lt;code&gt;float64(r.Int63()) / (1&amp;lt;&amp;lt;63)&lt;/code&gt;. However, this had a problem of occasionally rounding to &lt;code&gt;1.0&lt;/code&gt;, while &lt;code&gt;Float64&lt;/code&gt; should never round. The improvement involves changing it to &lt;code&gt;float64(r.Int63n(1&amp;lt;&amp;lt;53)) / (1&amp;lt;&amp;lt;53)&lt;/code&gt;, which avoids the rounding issue.&lt;/li&gt;
&lt;li&gt;Implemented &lt;code&gt;Rand.Perm&lt;/code&gt; using &lt;code&gt;Rand.Shuffle&lt;/code&gt;. This improves efficiency and ensures only one implementation.&lt;/li&gt;
&lt;li&gt;Renamed &lt;code&gt;Int31&lt;/code&gt;, &lt;code&gt;Int31n&lt;/code&gt;, &lt;code&gt;Int63&lt;/code&gt;, and &lt;code&gt;Int64n&lt;/code&gt; to &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int32n&lt;/code&gt;, &lt;code&gt;Int64&lt;/code&gt;, and &lt;code&gt;Int64n&lt;/code&gt;, respectively. These names were unnecessary and confusing.&lt;/li&gt;
&lt;li&gt;Added &lt;code&gt;Uint32&lt;/code&gt;, &lt;code&gt;Uint32n&lt;/code&gt;, &lt;code&gt;Uint64&lt;/code&gt;, &lt;code&gt;Uint64n&lt;/code&gt;, &lt;code&gt;Uint&lt;/code&gt;, and &lt;code&gt;Uintn&lt;/code&gt; as top-level functions and methods on &lt;code&gt;Rand&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Utilized Lemire’s algorithm in &lt;code&gt;Intn&lt;/code&gt;, &lt;code&gt;Uintn&lt;/code&gt;, &lt;code&gt;Int32n&lt;/code&gt;, &lt;code&gt;Uint32n&lt;/code&gt;, &lt;code&gt;Int64n&lt;/code&gt;, and &lt;code&gt;Uint64n&lt;/code&gt;, resulting in improved performance.&lt;/li&gt;
&lt;li&gt;Introduced a new implementation of &lt;code&gt;Source&lt;/code&gt; called PCG-DXSM, including related APIs like &lt;code&gt;NewPCG&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Removed the Mitchell &amp;amp; Reeds LFSR generator and &lt;code&gt;NewSource&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;example&#34;&gt;example
&lt;/h2&gt;&lt;h3 id=&#34;read-seed&#34;&gt;Read &amp;amp; Seed
&lt;/h3&gt;&lt;p&gt;The functions &lt;code&gt;Read&lt;/code&gt; and &lt;code&gt;Seed&lt;/code&gt; have been removed. It is recommended to use &lt;code&gt;crypto/rand&lt;/code&gt;&amp;rsquo;s &lt;code&gt;Read&lt;/code&gt; function instead.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-go&#34; data-lang=&#34;go&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;crypto/rand&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;s&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;err&#34;&gt;​&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;kd&#34;&gt;func&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;make&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([]&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;byte&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;_&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;rand&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Read&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;kc&#34;&gt;nil&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;   &lt;span class=&#34;nb&#34;&gt;panic&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nx&#34;&gt;err&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;nx&#34;&gt;fmt&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;nf&#34;&gt;Printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;hxzhouh: %v\n&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;nx&#34;&gt;b&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;output：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hxzhouh: &lt;span class=&#34;o&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;m&#34;&gt;48&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;71&lt;/span&gt; 122&lt;span class=&#34;o&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;For the &lt;code&gt;Seed&lt;/code&gt; function, it is advised to call &lt;code&gt;New(NewSource(seed))&lt;/code&gt; in order to reinitialize the random number generator.&lt;/p&gt;
&lt;h4 id=&#34;internal&#34;&gt;internal
&lt;/h4&gt;&lt;p&gt;The functions &lt;code&gt;N&lt;/code&gt;, &lt;code&gt;IntN&lt;/code&gt;, and &lt;code&gt;UintN&lt;/code&gt; now utilize a novel implementation algorithm. Interested individuals are encouraged to allocate extra time to examine it in detail: &lt;a class=&#34;link&#34; href=&#34;https://lemire.me/blog/2016/06/27/a-fast-alternative-to-the-modulo-reduction/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;A fast alternative to the modulo reduction&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The functions &lt;code&gt;Intn&lt;/code&gt;, &lt;code&gt;Int31&lt;/code&gt;, &lt;code&gt;Int31n&lt;/code&gt;, &lt;code&gt;Int63&lt;/code&gt;, and &lt;code&gt;Int64n&lt;/code&gt; have been renamed as follows: &lt;code&gt;IntN&lt;/code&gt;, &lt;code&gt;Int32&lt;/code&gt;, &lt;code&gt;Int32N&lt;/code&gt;, &lt;code&gt;Int64&lt;/code&gt;, and &lt;code&gt;Int64N&lt;/code&gt;, respectively.&lt;/p&gt;
&lt;p&gt;Additionally, new functions &lt;code&gt;Uint32&lt;/code&gt;, &lt;code&gt;Uint32N&lt;/code&gt;, &lt;code&gt;Uint64&lt;/code&gt;, &lt;code&gt;Uint64N&lt;/code&gt;, &lt;code&gt;Uint&lt;/code&gt;, and &lt;code&gt;UintN&lt;/code&gt; have been introduced to generate random unsigned integers. They have also been added as corresponding functions within the &lt;code&gt;Rand&lt;/code&gt; structure.&lt;/p&gt;
&lt;p&gt;The newly added function &lt;code&gt;N&lt;/code&gt; generates random numbers of arbitrary integer types. This function is implemented using generics, and the following integer types are its type parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;int&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int8&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int16&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int32&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;int64&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;summary&#34;&gt;Summary
&lt;/h2&gt;&lt;p&gt;Today, we have shared and further described the new &lt;code&gt;math/rand/v2&lt;/code&gt; library, highlighting key changes including performance optimization (algorithm rewrite), standardization, and additions of new random generators.&lt;br&gt;
Given the substantial amount of information covered, we have selected and presented only the aspects that are essential for understanding and using the library. However, for those who are interested in delving deeper, it is recommended to refer to the full documentation of &lt;a class=&#34;link&#34; href=&#34;https://pkg.go.dev/math/rand/v2@master&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://pkg.go.dev/math/rand/v2@master&lt;/a&gt;&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
