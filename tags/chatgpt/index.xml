<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Chatgpt on huizhou92&#39;s Blog</title>
        <link>https://huizhou92.com/tags/chatgpt/</link>
        <description>Recent content in Chatgpt on huizhou92&#39;s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Fri, 12 Jan 2024 20:16:03 +0000</lastBuildDate><atom:link href="https://huizhou92.com/tags/chatgpt/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>How to Set Up ChatGPT-4 Service Using GitHub Copilot</title>
        <link>https://huizhou92.com/p/how-to-set-up-chatgpt-4-service-using-github-copilot/</link>
        <pubDate>Fri, 12 Jan 2024 20:16:03 +0000</pubDate>
        
        <guid>https://huizhou92.com/p/how-to-set-up-chatgpt-4-service-using-github-copilot/</guid>
        <description>&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/1*jfXCQTbth8PaLKaE5KgNzg.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;This article has expired, please do not use it&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;GitHub Copilot is a AI assistant developed by GitHub to help developers write code. It is a Visual Studio Code plugin based on OpenAI Codex, providing features such as code suggestions, auto-completion, auto-fixing, and auto-refactoring. Currently, GitHub Copilot also supports chat functionality, powered by GPT-4. However, it is only available within the context of VS Code. In this article, I will explain how to set up a chat service using GitHub Copilot, allowing you to use it anywhere.&lt;/p&gt;
&lt;h1 id=&#34;open-source-components&#34;&gt;Open-Source Components
&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ChatGPT-Next-Web&lt;/a&gt;: A well-designed, cross-platform ChatGPT web UI with support for GPT3, GPT4, and Gemini Pro.&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/aaamoon/copilot-gpt4-service&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;copilot-gpt4-service&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;An AWS EC2 server is needed to run the copilot-gpt4-service, but you can choose any cloud service provider you prefer or run it locally.&lt;/li&gt;
&lt;li&gt;Vercel: A free static website hosting service to deploy the ChatGPT-Next-Web service.&lt;/li&gt;
&lt;li&gt;Cloudflare: A free CDN service used for domain name resolution.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;obtaining-the-github-copilottoken&#34;&gt;Obtaining the GitHub Copilot Token
&lt;/h1&gt;&lt;p&gt;Please refer to this document, &lt;a class=&#34;link&#34; href=&#34;https://github.com/aaamoon/copilot-gpt4-service/blob/master/README_CN.md#%E8%8E%B7%E5%8F%96-copilot-token&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;GitHub Copilot Token&lt;/a&gt;. On a Mac, you can use the following command to obtain the token:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;bash -c &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/aaamoon/copilot-gpt4-service/master/shells/get_copilot_token.sh)&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/0*CKQlLPEw2yVoNGNp.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;p&gt;As shown in the screenshot, you need to copy the token to the clipboard for later use.&lt;/p&gt;
&lt;h1 id=&#34;running-the-copilot-gpt4-service&#34;&gt;Running the copilot-gpt4-service
&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;The copilot-gpt4-service supports Docker deployment, and the official project provides a &lt;a class=&#34;link&#34; href=&#34;https://github.com/aaamoon/copilot-gpt4-service/blob/master/docker-compose.yml&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;docker-compose&lt;/a&gt; file. You only need to modify the environment variables.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn-images-1.medium.com/max/800/0*K537j_O1-TsDgmJl.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
	
&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a server block in NGINX:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;server {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     listen 443 ssl;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     listen [::]:443 ssl;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     server_name chat.example.com;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ​
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     ssl_certificate /etc/nginx/cert/public.pem;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     ssl_certificate_key /etc/nginx/cert/private.key;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; ​
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     location / {
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_pass http://127.0.0.1:8086/;  # Replace with the copilot-gpt4-service address
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         rewrite ^/(.*)$ /$1 break;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_redirect off;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header Host $host;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header X-Forwarded-Proto $scheme;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header X-Real-IP $remote_addr;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header Upgrade-Insecure-Requests 1;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;         proxy_set_header X-Forwarded-Proto https;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;     }
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;Don&amp;rsquo;t forget to reload the NGINX configuration file.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add a domain name resolution for &amp;ldquo;chat.example.com&amp;rdquo; on Cloudflare, pointing to the IP address of your NGINX server.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;deploying-the-chatgpt-next-web-service-onvercel&#34;&gt;Deploying the ChatGPT-Next-Web Service on Vercel
&lt;/h1&gt;&lt;p&gt;ChatGPT-Next-Web supports one-click deployment to Vercel. You don&amp;rsquo;t need to make any changes.&lt;/p&gt;
&lt;p&gt;Once the deployment on &lt;code&gt;Vercel&lt;/code&gt; is complete, you can add a custom domain name, such as &amp;ldquo;chatnext.example.com&amp;rdquo;.&lt;/p&gt;
&lt;h1 id=&#34;testing&#34;&gt;Testing
&lt;/h1&gt;&lt;p&gt;Open your browser and enter &amp;ldquo;chatnext.example.com&amp;rdquo;. Click on the settings button in the bottom left corner and select &amp;ldquo;Custom Interface&amp;rdquo;. Enter &amp;quot; &lt;a class=&#34;link&#34; href=&#34;https://chat.example.com&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://chat.example.com&lt;/a&gt;&amp;quot; as the API endpoint, and use the GitHub Copilot token copied in the first step as the API token. Click on &amp;ldquo;Save&amp;rdquo;, and you can start chatting.&lt;/p&gt;</description>
        </item>
        
    </channel>
</rss>
